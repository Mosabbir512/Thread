import com.sun.jdi.ThreadReference;

import javax.swing.*;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;



public class Main2 {
    public static void main(String[] args) {

        ReentrantLock lock=new ReentrantLock();

       Thread t1=new Thread(()->{
           try {
               sleep(100);
               lock.lockInterruptibly();   // interrupt korle ar lock korte parbe na exception throw korbe  // unlock korar por problem hobe na
               System.out.println("lock acquire by : "+Thread.currentThread().getName());
           }catch (InterruptedException ex){
               System.err.println("inturrpted before the lock acquired");
           }
           finally {
               lock.unlock();
               System.out.println("locked release: "+Thread.currentThread().getName());
           }
       });

       t1.start();

        lock.lock();
        System.out.println("lock acquired by thread: "+Thread.currentThread().getName());
        sleep(1_000);
        t1.interrupt();  // for this problem occurred
        System.out.println("lock release by thread: "+Thread.currentThread().getName());
        lock.unlock();

    }
    static void sleep(long ms){
        try{Thread.sleep(ms);
        }
        catch (Exception ex){
            ex.printStackTrace();
        }
    }
}

/*
output: 
lock acquired by thread: main
inturrpted before the lock acquired
Exception in thread "Thread-0" java.lang.IllegalMonitorStateException
	at java.base/java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059)
	at java.base/java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:495)
	at Main2.lambda$main$0(Main2.java:55)
	at java.base/java.lang.Thread.run(Thread.java:1575)
lock release by thread: main


*/
