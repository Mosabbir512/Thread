import javax.swing.*;
import java.util.LinkedList;
import java.util.Queue;

class  TaskQueue{
    public final int max_size=10;
    private final Queue<String>queue=new LinkedList<>();
    public synchronized void produce(String  task){
       queue.add(task);

    }
    public synchronized String consume(){
        return  queue.poll();
    }
}

public class Main {
    public static void main(String[] args) throws Exception {
        TaskQueue taskQueue=new TaskQueue();
        for(int i=1;i<=3;i++){
            new Thread(()->taskProduct(taskQueue)).start();
        }
        for(int i=1;i<=5;i++){
            new Thread(()->taskConsume(taskQueue)).start();
        }

    }

    static void taskProduct(TaskQueue taskQueue){
        int i=0;
        while (true){
            i++;
            String task="Task -> "+i;
            System.out.println("Producer : "+Thread.currentThread().getName()+" by task : "+task);
            taskQueue.produce(task);
            Main.sleep(1000);
        }
    }

    static void taskConsume(TaskQueue taskQueue){
        while (true){
            String task=taskQueue.consume();
            System.out.printf("Consumer : %s , Task = %s\n",Thread.currentThread().getName(),task);
            Main.sleep(200);
        }
    }
    static void sleep(long ms){
        try {
            Thread.sleep(ms);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

}


/*
outpu:
Producer : Thread-2 by task : Task -> 1
Consumer : Thread-3 , Task = Task -> 1
Producer : Thread-1 by task : Task -> 1
Producer : Thread-0 by task : Task -> 1
Consumer : Thread-6 , Task = null
Consumer : Thread-5 , Task = null
Consumer : Thread-4 , Task = null
Consumer : Thread-7 , Task = Task -> 1
Consumer : Thread-3 , Task = Task -> 1
Consumer : Thread-6 , Task = null
Consumer : Thread-5 , Task = null
Consumer : Thread-4 , Task = null
Consumer : Thread-7 , Task = null
Consumer : Thread-4 , Task = null
Consumer : Thread-3 , Task = null
Consumer : Thread-5 , Task = null
Consumer : Thread-6 , Task = null
Consumer : Thread-7 , Task = null
Consumer : Thread-3 , Task = null
Consumer : Thread-4 , Task = null
Consumer : Thread-6 , Task = null
Consumer : Thread-5 , Task = null
Consumer : Thread-7 , Task = null
Consumer : Thread-3 , Task = null
Consumer : Thread-6 , Task = null
Consumer : Thread-5 , Task = null
Consumer : Thread-4 , Task = null
Consumer : Thread-7 , Task = null
Producer : Thread-2 by task : Task -> 2
Producer : Thread-0 by task : Task -> 2
Producer : Thread-1 by task : Task -> 2
Consumer : Thread-3 , Task = Task -> 2
Consumer : Thread-4 , Task = Task -> 2
Consumer : Thread-6 , Task = Task -> 2
Consumer : Thread-5 , Task = null
Consumer : Thread-7 , Task = null
Consumer : Thread-3 , Task = null
Consumer : Thread-4 , Task = null
*/
